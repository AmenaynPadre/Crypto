{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\narek\\\\Desktop\\\\alo\\\\myJS\\\\crypto2\\\\src\\\\components\\\\common\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { API_URL } from \"../../configs\";\nimport Loading from \"./Loading\";\nimport { useNavigate } from \"react-router-dom\";\nimport './Search.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const [currencies, setCurrencies] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResult, setSearchResult] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    (async () => {\n      setIsLoading(true);\n\n      try {\n        const response = await fetch(API_URL);\n        const result = await response.json();\n        setCurrencies(result);\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, []);\n\n  const handleChangeInput = e => {\n    const searchQuery = e.target.value;\n    setSearchQuery(searchQuery);\n\n    if (!searchQuery) {\n      setSearchResult([]);\n      return;\n    }\n\n    const charFromQuery = searchQuery.split('');\n    setIsLoading(true);\n    setTimeout(() => {\n      const searchResult = currencies.filter(item => {\n        return charFromQuery.every(char => item.id.includes(char));\n      });\n      setSearchResult(searchResult);\n      setIsLoading(false);\n    }, 500);\n  };\n\n  const handleRedirect = id => {\n    navigate({\n      pathname: `/currency/${id}`\n    });\n    setSearchQuery('');\n    setSearchResult([]);\n  };\n\n  const renderSearchResults = () => {\n    if (!searchQuery) {\n      return '';\n    }\n\n    if (searchResult.length) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Search-result-container\",\n        children: searchResult.map(result => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Search-result\",\n          onClick: () => handleRedirect(result.id),\n          children: [result.name, \" (\", result.symbol, \")\"]\n        }, result.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this);\n    }\n\n    if (!isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Search-result-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Search-no-result\",\n          children: \"No results found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Search\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"Search-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"Search-input\",\n        placeholder: \"Currency name\",\n        value: searchQuery,\n        onChange: handleChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Search-loading\",\n        children: /*#__PURE__*/_jsxDEV(Loading, {\n          width: \"12px\",\n          height: \"12px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), renderSearchResults()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Search, \"d5HR2JTHpbIiZMQoOKrCjtayyuE=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/narek/Desktop/alo/myJS/crypto2/src/components/common/Search.js"],"names":["React","useEffect","useState","API_URL","Loading","useNavigate","Search","currencies","setCurrencies","searchQuery","setSearchQuery","searchResult","setSearchResult","isLoading","setIsLoading","navigate","response","fetch","result","json","error","console","log","handleChangeInput","e","target","value","charFromQuery","split","setTimeout","filter","item","every","char","id","includes","handleRedirect","pathname","renderSearchResults","length","map","name","symbol"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { API_URL } from \"../../configs\";\r\nimport Loading from \"./Loading\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport './Search.css'\r\n\r\nconst Search = () => {\r\n  const [currencies, setCurrencies] = useState([])\r\n  const [searchQuery, setSearchQuery] = useState('')\r\n  const [searchResult, setSearchResult] = useState([])\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(()=>{\r\n    (async()=>{\r\n      setIsLoading(true)\r\n       try {\r\n           const response = await fetch(API_URL);\r\n           const result = await response.json();\r\n          setCurrencies(result);\r\n          setIsLoading(false)\r\n          } catch (error) {\r\n        console.log(error);   \r\n       }\r\n    })()\r\n  },[])\r\n\r\n  const handleChangeInput = (e) =>{\r\n    const searchQuery = e.target.value;\r\n    setSearchQuery(searchQuery)\r\n\r\n    if(!searchQuery){\r\n        setSearchResult([])\r\n        return\r\n    }\r\n    const charFromQuery = searchQuery.split('');\r\n    setIsLoading(true)\r\n\r\n    setTimeout(()=>{\r\n        const searchResult = currencies.filter(item =>{\r\n            return charFromQuery.every(char => item.id.includes(char))\r\n        });\r\n        setSearchResult(searchResult)\r\n        setIsLoading(false)\r\n    },500)\r\n   }\r\n\r\n const handleRedirect = (id) =>{\r\n       navigate({\r\n           pathname: `/currency/${id}`\r\n       })\r\n       setSearchQuery('');\r\n       setSearchResult([])\r\n      }\r\n\r\n const  renderSearchResults = ()=>{\r\n    if(!searchQuery){\r\n        return ''\r\n    }  \r\n    if(searchResult.length){\r\n        return (\r\n            <div className=\"Search-result-container\">\r\n            {searchResult.map(result =>\r\n              <div\r\n                key={result.id}\r\n                className=\"Search-result\"\r\n                onClick={()=>handleRedirect(result.id)}\r\n              >\r\n                {result.name} ({result.symbol})\r\n              </div>\r\n            )}\r\n          </div>\r\n        )\r\n    }\r\n\r\n    if(!isLoading){\r\n        return (\r\n            <div className=\"Search-result-container\">\r\n                <div className=\"Search-no-result\">\r\n                  No results found.\r\n                </div>\r\n              </div>\r\n        )\r\n    }\r\n   }\r\n\r\n        return (\r\n            <div className='Search'>\r\n            <div>\r\n              <span className=\"Search-icon\" />\r\n              <input \r\n                type=\"text\"\r\n                className=\"Search-input\"\r\n                placeholder=\"Currency name\"\r\n                value={searchQuery}\r\n                onChange={handleChangeInput}\r\n              />\r\n               {\r\n          isLoading &&\r\n            <div className=\"Search-loading\">\r\n              <Loading\r\n                width=\"12px\"\r\n                height=\"12px\"\r\n              />\r\n            </div>}\r\n            </div>\r\n       {renderSearchResults()}     \r\n          </div>\r\n        )\r\n}\r\nexport default Search"]},"metadata":{},"sourceType":"module"}